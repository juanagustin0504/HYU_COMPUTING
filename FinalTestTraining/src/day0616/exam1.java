package day0616;

import java.io.IOException;
import java.io.PrintWriter;


// 문제 2-2) 다음은 삼각형에 대한 정보를 받아서 vtu 파일로 출력하는 클래스이다. 코드를 완성하시오. 
class fileout {

	
	//-----------------  문제 2-2 답안 시작  ---------------------------
	
		// 여기에 작성할 것(다른 위치 코드 건들지 말 것!)
	String filename;

	//-----------------  문제 2-2 답안 끝  -----------------------------

	
	void triout(double[][] xyz, int[][] tri) throws IOException {		// xyz는 꼭지점 좌표, tri는 삼각형 도형의 정의(반시계방향)한 데이터임. 기존의 코드를 건들면 안됨!
		
		
		//-----------------  문제 2-2 답안 시작  ---------------------------
		
			// 여기에 작성할 것(다른 위치 코드 건들지 말 것!)
		PrintWriter pw = new PrintWriter(filename);
		pw.println("# vtk DataFile Version 2.0");
		pw.println("test");
		pw.println("ASCII");
		pw.println("DATASET UNSTRUCTURED_GRID");
		
		pw.println("POINTS " + xyz.length + " float");
		for(int i = 0; i < xyz.length; i++) {
			pw.println(xyz[i][0] + " " + xyz[i][1] + " " + xyz[i][2]);
		}
		
		pw.println("CELLS " + tri.length + " " + (tri.length * 4));
		for(int i = 0; i < tri.length; i++) {
			pw.println("3 " + tri[i][0] + " " + tri[i][1] + " " + tri[i][2]);	
		}
		
		
		pw.println("CELL_TYPES " + tri.length);
		for(int i = 0; i < tri.length; i++) {
			pw.println("5");
		}
		//-----------------  문제 2-2 답안 끝  -----------------------------
		
		pw.close();

	}
	
}


// 문제 2-3) 문제 2-1이 실행되도록 다음 클래스를 수정하시오.
//-------------------- 문제 2-2 답안 시작 (아래 코드를 수정) ------------
class calarea extends fileout {
	public double sq(double h1, double h2, double d) {		
		double area = (h1+h2)*d/2;
		return area;
	}
}
//-------------------- 문제 2-2 답안 끝 ------------------------------


public class exam1 {

	public static void main(String[] args) throws IOException {
		calarea ca = new calarea();
		
		double[][] nodes = {{-5,3},{-5,-2},{-3,4},{-3,-2.3},{-1,1},{-1,-1},{3,2},{3,-2.5},{6,0.5},{6,-2},{7,4.5},{7,-2.5}};
		
		
		//************** 문제 1 **************
		// 문제 1) calarea라는 클래스의 sq 메소드를 활용하여 그림의 면적을 구하고자 한다. 
		// 문제 1-1) 반복문(for또는 while)문을 쓰지말고 sum이라는 변수에 면적이 누적된 값을 넣고 출력하시오. (Math.abs(음수) -> 양수가 됨 사용) 		
		double sum = 0;
		//-----------------  문제 1-1 답안 시작  ---------------------------
		
			// 여기에 작성할 것(다른 위치 코드 건들지 말 것!)

		//-----------------  문제 1-1 답안 끝  -----------------------------
		System.out.println(sum);  // 결과 47.85

		

		
		// 문제 1-2) for문을 사용하여 sum1이라는 변수에 면적이 누적된 값을 넣고 출력하시오. (문제 1-1에서 패턴을 찾고 for문으로 표현시킬 것. 일반화 중요)
		double sum1 = 0;
		//-----------------  문제 1-2 답안 시작  ---------------------------
		
			// 여기에 작성할 것(다른 위치 코드 건들지 말 것!)

		//-----------------  문제 1-2 답안 끝  -----------------------------
		System.out.println(sum1);  // 결과 47.85

		
		
		

		// 문제 1-3) 그림 2와 같이 도형을 y방향으로 -8만큼 수평이동시킬 경우, nodes의 좌표의 값들을 수정하는 코드를 작성하시오.
		//-----------------  문제 1-3 답안 시작  ---------------------------
		
			// 여기에 작성할 것(다른 위치 코드 건들지 말 것!)

		//-----------------  문제 1-3 답안 끝  -----------------------------				
		
		
		
		
		// 문제 1-4) 1-3에서 수평이동 한 도형의 면적을 sum2에 누적시켜 출력하시오. (for문 사용할 것.)
		// 만약에 1-2에서 작성한 코드가 1-4문제에도 적용가능하도록 완벽하게 일반화 시켰으면 1-4문제는 작성할 필요 없음, 
		// 대신 '1-2코드가 해결 가능합니다!'라고 메시지 적을 것( 문제 1-4 점수 + 추가점수 있음 ).
		double sum2 = 0;
		//-----------------  문제 1-4 답안 시작  ---------------------------
		
		// 여기에 작성할 것(다른 위치 코드 건들지 말 것!)

		//-----------------  문제 1-4 답안 끝  -----------------------------								
		System.out.println(sum2);  // 결과 47.85
					







			
		//************** 문제 2 **************
		// 문제 2) 그림 1번은 fig1.vtu, 그림 2번은 fig2.vtu에 그리고자 한다. 
		// 다음과 같이 실행하였을 경우 파일들이 출력되도록 코드를 완성시키시오.
		// 문제2-1) xyz, tri 정의할 것
		
		//-----------------  문제 2-1 답안 시작  ---------------------------
		
			// 여기에 작성할 것(다른 위치 코드 건들지 말 것!)
		double[][] xyz = {{0,0,0}, {1,0,0}, {1,1,0}};
		int[][] tri = {{0,1,2}};

		//-----------------  문제 2-1 답안 끝  -----------------------------		
		ca.filename = "fig1.vtu";
		ca.triout(xyz, tri);
		
		
		
		//-----------------  문제 2-1 답안 시작  ---------------------------
		
		// 여기에 작성할 것(다른 위치 코드 건들지 말 것!)
//		xyz = {{0,0,0}, {-1,1,0}, {-1,0,0}};
		xyz[0][0] = 0;
		xyz[0][1] = 0;
		xyz[0][2] = 0;
		
		xyz[1][0] = -1;
		xyz[1][1] = 1;
		xyz[1][2] = 0;
		
		xyz[2][0] = -1;
		xyz[2][1] = 0;
		xyz[2][2] = 0;
		
		
		tri[0][0] = 0;
		tri[0][1] = 1;
		tri[0][2] = 2;

		//-----------------  문제 2-1 답안 끝  -----------------------------		
		// 문제2-1) xyz, tri 정의할 것
		ca.filename = "fig2.vtu";
		ca.triout(xyz, tri);
		

		
	}

}

